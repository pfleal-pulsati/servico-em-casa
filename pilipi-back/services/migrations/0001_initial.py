# Generated by Django 4.2.7 on 2025-08-17 17:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proposed_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Preço Proposto (R$)')),
                ('estimated_duration', models.DurationField(blank=True, help_text='Tempo estimado para conclusão do serviço', null=True, verbose_name='Duração Estimada')),
                ('status', models.CharField(choices=[('assigned', 'Atribuído'), ('started', 'Iniciado'), ('completed', 'Concluído'), ('cancelled', 'Cancelado')], default='assigned', max_length=15, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Observações do Prestador')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Iniciado em')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Concluído em')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_services', to=settings.AUTH_USER_MODEL, verbose_name='Prestador de Serviço')),
            ],
            options={
                'verbose_name': 'Atribuição de Serviço',
                'verbose_name_plural': 'Atribuições de Serviços',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 - Muito Ruim'), (2, '2 - Ruim'), (3, '3 - Regular'), (4, '4 - Bom'), (5, '5 - Excelente')], verbose_name='Avaliação')),
                ('comment', models.TextField(blank=True, verbose_name='Comentário')),
                ('would_recommend', models.BooleanField(default=True, verbose_name='Recomendaria este prestador?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assignment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='services.serviceassignment', verbose_name='Atribuição de Serviço')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to=settings.AUTH_USER_MODEL, verbose_name='Avaliador')),
            ],
            options={
                'verbose_name': 'Avaliação de Serviço',
                'verbose_name_plural': 'Avaliações de Serviços',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título do Serviço')),
                ('description', models.TextField(help_text='Descreva o problema ou serviço necessário', verbose_name='Descrição Detalhada')),
                ('address', models.TextField(verbose_name='Endereço do Serviço')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(max_length=2, verbose_name='Estado')),
                ('preferred_date', models.DateTimeField(blank=True, help_text='Data e hora preferencial para o serviço (opcional)', null=True, verbose_name='Data Preferencial')),
                ('budget_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Orçamento Mínimo (R$)')),
                ('budget_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Orçamento Máximo (R$)')),
                ('priority', models.CharField(choices=[('low', 'Baixa'), ('medium', 'Média'), ('high', 'Alta'), ('urgent', 'Urgente')], default='medium', max_length=10, verbose_name='Prioridade')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('accepted', 'Aceito'), ('in_progress', 'Em Andamento'), ('completed', 'Concluído'), ('cancelled', 'Cancelado')], default='pending', max_length=15, verbose_name='Status')),
                ('images', models.JSONField(blank=True, default=list, help_text='URLs das imagens relacionadas ao problema', verbose_name='Imagens')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.servicecategory', verbose_name='Categoria do Serviço')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to=settings.AUTH_USER_MODEL, verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Solicitação de Serviço',
                'verbose_name_plural': 'Solicitações de Serviços',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='serviceassignment',
            name='service_request',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='services.servicerequest', verbose_name='Solicitação de Serviço'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('message', models.TextField(verbose_name='Mensagem')),
                ('notification_type', models.CharField(choices=[('new_request', 'Nova Solicitação Disponível'), ('request_accepted', 'Solicitação Aceita'), ('service_started', 'Serviço Iniciado'), ('service_completed', 'Serviço Concluído'), ('review_received', 'Avaliação Recebida'), ('general', 'Geral')], default='general', max_length=20, verbose_name='Tipo de Notificação')),
                ('is_read', models.BooleanField(default=False, verbose_name='Lida')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_service_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.servicerequest', verbose_name='Solicitação Relacionada')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Notificação',
                'verbose_name_plural': 'Notificações',
                'ordering': ['-created_at'],
            },
        ),
    ]
